{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 HelveticaNeue-Bold;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 HelveticaNeue-Italic;\f4\fnil\fcharset0 HelveticaNeue-BoldItalic;}
{\colortbl;\red255\green255\blue255;\red53\green53\blue53;\red220\green161\blue13;}
{\*\expandedcolortbl;;\cssrgb\c27059\c27059\c27059;\cssrgb\c89412\c68627\c3922;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab560
\pard\pardeftab560\sa40\partightenfactor0

\f0\b\fs28 \cf2 CONFIGURACI\'d3N CUANDO COMIENZO UN PROYECTO CON GIT\
\pard\pardeftab560\slleading20\partightenfactor0

\b0\fs24 \cf2 \
*Siempre al empezar un proyecto primero primero inspecciono los elementos :\
ls\
Luego cd Desktop - y me ubico en la carpeta del proyecto en la cual voy a trabajar \
git \'97version \
git config \'97global user.name \'93Volta\'94\
Git config \'97global user.email \'93{\field{\*\fldinst{HYPERLINK "mailto:giovoltadesign@gmail.com"}}{\fldrslt \cf3 giovoltadesign@gmail.com}}\
\
\
$ git --version\
					\
					$ git config --global user.name "TU NOMBRE"\
					\
					$ git config --global user.email "TU CORREO DE GITHUB"\
					\
					$ git config --global --list\
					\
					$ git help [comando a buscar]\
					\
\
\
*Siempre al empezar un proyecto primero primero inspecciono los elementos :\
ls\
Luego cd Desktop - y me ubico en la carpeta del proyecto en la cual voy a trabajar \
Una vez ubicado en el Desktop inspecciono la carpeta del proyecto\
cd proyecto web\
\
*clear es para ir borrando todo\
git add -A \
Primer commit git commit -m  \'93archivos de proyecto instalados \
Git log : me muestra Historial del proyecto con los datos del usuario \
\
*Una vez comienzo a editar con el editor de texto puede ser \'93sublime o atom\'94\
Aplico git status para ver que cambio hay, en que archivo y puedo comentar directamente \
\pard\pardeftab560\slleading20\partightenfactor0

\f1\b \cf2 git commit\'96m \'93cambios de footer\'94
\f0\b0 \'a0\
puedo preparar un archivo con git add \'93nombre del archivo\
git commit \'93nombre del archivo\'94 \'97amend \
\
\
1.\'a0
\f1\b git init
\f0\b0 \'a0\'a0-> crea el repositorio en local que es un directorio .git que contiene todo el historial\'a0\
2.\'a0
\f1\b git status
\f0\b0 \'a0->para ver que esta en el repo y que no\
3.\'a0
\f1\b git add [archivos]
\f0\b0 \'a0-> stagin area, preparar lo que sera el commit\'a0\
4.\'a0
\f1\b git add -A
\f0\b0 \'a0->alista todos los archivos para el commit (agrega todos los archivos de golpe)\
5. \'a0
\f1\b git commit\'96m "que es estecommit"
\f0\b0 \'a0-> crea el commit\'a0y queda agregado al historial del repo \'a0\
\
\
Git y git hub \
cd para llamar la carpeta\
Ls para ver la lista\
Git ini para comenzar \
\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls1\ilvl0
\f2\fs20 \cf2 {\listtext	\'95	}
\f0\fs24 git help te muestra como funciona los parapeto es un par\'e1metro\
\ls1\ilvl0
\f2\fs20 {\listtext	\'95	}
\f0\fs24 git help commit\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 git config --list para revisar listado \
Git help add commit \
1.\'a0
\f1\b git init
\f0\b0 \'a0\'a0-> crea el repositorio en local que es un directorio .git que contiene todo el historial\'a0\
2.\'a0
\f1\b git status
\f0\b0 \'a0->para ver que esta en el repo y que no\
3.\'a0
\f1\b git add [archivos]
\f0\b0 \'a0-> stagin area, preparar lo que sera el commit\'a0\
4.\'a0
\f1\b git add -A
\f0\b0 \'a0->alista todos los archivos para el commit\
5. \'a0
\f1\b gitcommit\'96m "que es estecommit"
\f0\b0 \'a0-> crea el commit\'a0y queda agregado al historial del repo \'a0\
\
\pard\pardeftab560\sa40\partightenfactor0

\b\fs28 \cf2 *git status te muestra en rojo los cambios del c\'f3digo en el html\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0

\b0\fs24 \cf2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 git status  te muestra que archivos puedes ir guardando\
git add -A alista todo los archivos \
git log \
git superlog\
\
RAMAS \
git commit -am \'93commit nuevo\'94 rama experimental \
\
BORRAR\
Git reset borra todo el proyecto \
git reset \'97hard \'93mas el ID del commit de ahi hacia arriba borra todo, si borro de arriba hacia bajo vuelve a los commit anteriores, si borro de abajo hacia arriba borra todo ejemplo ultimo de ID \'93\
git add -A guardar \
git commit -m \'93123\'94\
git log \
\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\b \cf2 git reset
\f0\b0  mix recopila todos recopilo todos los commit y el e iguala el repositorio con el standing area\
Y en ves de tener 3 commit creado recopila todo en 1 \
\

\f1\b git reset soft 
\f0\b0 hace cambio solo en repositorio pero iguala el standing con el  working siempre se trabaja con el commit base git rest commit directamente el mix hay preparar los archivos para los commit en soft est\'e1n todos los archivos preparados para el comino\
\

\f1\b git checkout 
\f0\b0 viaja en ele tiempo pegas el commit ID \
\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\
\pard\pardeftab560\slleading20\partightenfactor0
{\field{\*\fldinst{HYPERLINK "mailto:reclutamiento@desis.cl"}}{\fldrslt \cf3 reclutamiento@desis.cl}}\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\b \cf2 git init
\f0\b0  crear nuestro primer repositorio \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0

\f1\b \cf2 git  add
\f0\b0  subir uno a uno al work staging area git add - nombre del archivo\
\
CUANDO REALIZO CAMBIOS en el html\
Git status\
\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 Giovannis-MBP:platzigit-master volta$ git status\
On branch master\
Changes not staged for commit:\
  (use "git add <file>..." to update what will be committed)\
  (use "git checkout -- <file>..." to discard changes in working directory)\
\
	modified:   index.html\
\
no changes added to commit (use "git add" and/or "git commit -a")\
Giovannis-MBP:platzigit-master volta$ \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 Al cambio del index.html realizado o pagina x .html debemos agregar los siguientes despu\'e9s de darle git status\
para integraci\'f3n b\'e1sica\
 git add index.html\
git commit -m \'93cambios Nombre y descripci\'f3n\'94\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 \'93  git log    \'94 te permite ver el nombre del la carpeta del proyecto el autor la fecha de commit y m\'e1s \
Variantes de comando de git log\
git log \'97 online   te muestra el \'93sin detalles el commit id con el titulo\'94\
git log \'97 decorate \'93te muestra en que punto estas con head\'94\
Git log \'97online \'97graph \
git log \'97stat \'93numero de linea que se editaron, cuales fueron los cambios a nivel de archivo\'94\
git log -p \'93muestra los cambios y cuales fueron los cambios a nivel de c\'f3digo\'94\
Git shortlog \'93puedes ver en que esta trabajando cada desarrollador muestra los commit\'94\
git log \'97prety=format\
\
log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 \
\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\b \cf2 CLASE GIT HUB 2 
\f0\b0 \
\
cd Desktop , luego ls , cd platzigit-master, ls vemos los archivos .\
\
git config \'97global  alias.superlog\
git status\
git add -A , agregar todos los archivos \
git commit -m \'930\'94 agrega todos los archivos \
\
git log para ver los commit\
git super log\
git checkout -b experimental  - \'93 para crear ramas y entrar en ellas \'93\
\
PARA AGREGAR COMMIT \
Iteraci\'f3n b\'e1sica es para agregar archivos \
archivo 1.txt\
git add -A \
git commit -m \'931\'94\
\
archivo 2.txt\
git add -A \
git commit -m \'932\'94\
\
archivo 3.txt\
git add -A \
git commit -m \'933\'94\
\
\
\pard\pardeftab560\sa40\partightenfactor0

\b\fs28 \cf2 RAMAS \
\pard\pardeftab560\slleading20\partightenfactor0

\b0\fs24 \cf2 para crear una rama\
1-.git checkout -b \'93experimental\'94  \
\
git branch \'93nombre de la rama\'94\
\
git log para ver las commit ramas y features del master \
\
HEAD ES LA ubicaci\'f3n donde uno esta programando.\
\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\b \cf2 Git merge 
\f0\b0 \
\
Para fusionar ramas\
git merge experimental\
\
Va a fusionar la rama experimental pero quiero que le coloques un nombre\
PULSAR LA TECLA O , UNA VEZ COLOCAS EL NOMBRE ESC :X QUE ES CERRAR Y GUARDAR \
\

\f1\b PARA VER COMMIT
\f0\b0  \
\
Luego \
git superlog \
git log\
para restificaci\'f3n de commit de estar seguro y que sea el ultimo\
Git commit -am \'93descripci\'f3n cambiada\'94  \'97amend\
\
\'93Como borrar las ramas\'94 \
\
git branch -d experimental\
\
>\'a0
\f1\b Merge
\f0\b0 \'a0crea un\'a0
\f3\i nuevo commit
\f0\i0 \'a0con los cambios de las ramas que est\'e1s fusionando.\
\
>\'a0
\f1\b Rebase\'a0
\f0\b0 se\'a0
\f3\i "trae"
\f0\i0 \'a0los cambios de la otra rama (Master) y los fusiona con los suyos.\
\
git branch \'93para ver las ramas\'94\

\f1\b \
FUSI\'d3N
\f0\b0 \
\
solucionar el conflicto , con git status vemos el archivo en rojo luego esta en rojo apene hay que subirlo a \
Luego git add -A\
Git status \
Git commit -m \'93Fusi\'f3n realizada\'94\
\
\

\f1\b REINICIAR PROYECT 
\f0\b0 \
\
Entrar a las carpetas ocultas ls -la\
La git guarda el proyecto en una carpeta y el registro lo tiene una carpeta llamada .git\
Con el siguiente comando puedes eliminarla: rm - rf\
ls -la para ver todo el repositorio \
\
git checkout master es para volver atr\'e1s de un cambio en alguna rama\
\
git merge \'93para la fusi\'f3n\'94 decidir con que titulo queda o modificaci\'f3n \
Despues comentas interacci\'f3n b\'e1sica fusi\'f3n ejecutada\
\
\
se puede\'a0hacer un reset --hard \
al inicio del proyecto o commit inicial sin tener el id del commit de esta forma:\'a0\
git fetch origin\
git reset --hard origin/master\
\
\pard\pardeftab560\sa40\partightenfactor0

\b\fs28 \cf2 REBASE\
\pard\pardeftab560\slleading20\partightenfactor0

\b0\fs24 \cf2 \
En las fusiones se crea un solo commit \
En rebase pasa esto : a-b se colocan antes del commit de master \
Por ejemplo si vuelvo mi ejemplo a git checkout master vuelven deprecar los commit de la rama del rebase a - b vuelves atr\'e1s \'93por que master esta en el commit con nombre cuarto\'94 como subirlo:\
git merge rama rebase\
\
Ramarebase va acompa\'f1ado de merge se va atacando de varias formas , cuando trabajas con rebase tienen que hacer \'93merge\'94 git merge rama rebase\
Crear ramas git checkout  -b \'93nombre de la rama\'94\
\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\b \cf2 RAMA POR DEFECTO master 
\f0\b0 \
\
\
Css {\field{\*\fldinst{HYPERLINK "https://www.nigbox.com/cursos/css-basico-desde-cero/#/"}}{\fldrslt \cf3 https://www.nigbox.com/cursos/css-basico-desde-cero/#/}}\
\
PARA CLONAR cd ubico Desktop \
git clone y el link en HTTPS. {\field{\*\fldinst{HYPERLINK "https://github.com/github/gemoji.git"}}{\fldrslt \cf3 https://github.com/github/gemoji.git}}\
\
\
\pard\pardeftab560\sa40\partightenfactor0

\b\fs28 \cf2 LLAVE SSH  RSA COMO ALGORITMO \
\pard\pardeftab560\slleading20\partightenfactor0

\b0\fs24 \cf2 \
$ ssh-keygen -t rsa -b 4096 -C "[email de GitHub]"\
\
				Dar enter. Aceptar la localizaci\'f3n por defecto.\
\
				Contrase\'f1a.\
\
				$ cd  ~/.ssh\
\
				$ cat id_rsa.pub\
\
				Copiamos la llave y la pegamos en Settings > SSH, dentro de GitHub.\
			\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\b \cf2 Resumen
\f0\b0 \
\
ssh-keygen -t rsa -
\f1\b b
\f0\b0 \'a04096 -C "
\f4\i\b poner aqu\'ed correo electr\'f3nico
\f0\i0\b0 "\
\

\f1\b  
\f0\b0 \
cat id_rsa.pub\
\
Pegas el c\'f3digo y vuelvo al escritorio\
\
\
\
\pard\pardeftab560\sa40\partightenfactor0

\b\fs28 \cf2 WORK GITHUB\
\pard\pardeftab560\slleading20\partightenfactor0

\b0\fs24 \cf2 Creo la carpeta  mkdri nombre carpeta\
Entro a la carpeta con cd \
git init \
Agrego el primer archivo: touch 1.txt\
git remote add origin \'93nombre del repositorio remoto\
\
git push origin master \
Para retomar proyecto \
****desarrollamos***\
git fetch  origin  \'93refresh actualization del remoto\'94\
git merge origin/master \
git push origin master \
\
Cued realizas fetch no cae en la rama master \'93 la local \'93 si no cae en origin master rama escondida\
Luego de placa una fusi\'f3n : git merge origin/master\
\
\pard\pardeftab560\sa40\partightenfactor0

\b\fs28 \cf2 PROCESO DE REPOSITORIOS \'93FORKED\'94\
\pard\pardeftab560\slleading20\partightenfactor0

\b0\fs24 \cf2 Pasos en orden \
\
Crear \'f3 entrar a la carpeta del proyecto cd\
git init \
	\
        git remote add origin [HTTPS \'f3 SSH del proyecto forked]\
	git remote add upstream [HTTPS \'f3 SSH del proyecto principal]\
	git fetch upstream\
	git merge origin/upstream   \'93como conectamos la rama del repositorio original\'94\
	git fetch origin\
	git merge origin/master\
	Hacer cambios en local\
	git fetch upstream.            \'93Ramas escondidas \'93\
	git merge origin/upstream\
	git push origin master\
\
\
\pard\pardeftab560\slleading20\partightenfactor0
{\field{\*\fldinst{HYPERLINK "http://git.miguelnieva.com/#/273"}}{\fldrslt \cf3 http://git.miguelnieva.com/#/273}}\
\
\
\pard\pardeftab560\sa40\partightenfactor0

\b\fs28 \cf2 TESTING\
\pard\pardeftab560\slleading20\partightenfactor0
{\field{\*\fldinst{HYPERLINK "http://Travis-ci.org"}}{\fldrslt 
\b0\fs24 \cf3 Travis-ci.org}}
\b0\fs24  \
\pard\pardeftab560\slleading20\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://trello.com/b/EceUgtCL/ghost-roadmap"}}{\fldrslt \cf3 https://trello.com/b/EceUgtCL/ghost-roadmap}}\
\
\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\b \cf2 Issues y Milestones de Github\
\
}